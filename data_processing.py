import csv
import pandas as pd
import numpy as np
from keras.preprocessing.sequence import pad_sequences


def read_data_file(data_file_path):
    with open(data_file_path, 'rU') as f:
        data = list(list(map(lambda x: int(x) + 1, row)) for row in csv.reader(f, delimiter=','))

    return data


def read_label_file(label_file_path):
    df = pd.read_csv(label_file_path, sep=',', header=0, usecols=['category'])
    return df.values


def sequence_subsampling(x_train, y_train, window_length, stride=1, cut_zero_sequence=True):
    windows = []
    windows_y = []
    for i, sequence in enumerate(x_train):
        len_seq = len(sequence)
        for window_start in range(0, len_seq - window_length + 1, stride):
            window_end = window_start + window_length
            window = sequence[window_start:window_end]
            if cut_zero_sequence and (window != 0).any():
                windows.append(window)
                windows_y.append(y_train[i])
    return np.array(windows), np.array(windows_y)


data_file = "./Data/train/train.csv"
label_file = "./Data/train/train_label.csv"

X = read_data_file(data_file)
X = pad_sequences(X, maxlen=8192, dtype='int32', padding='post', truncating='post')
y = read_label_file(label_file)

# Sample 10% of the training data
dfX = pd.DataFrame(data=X)
dfY = pd.DataFrame(data=y)
sampleX = dfX.sample(frac=0.1, random_state=200)
sampleY = dfY.sample(frac=0.1, random_state=200)

print(sampleX.shape)
print(sampleY.shape)

sampleX.to_csv("./Data/train/random_train_data" + '.csv', index=False, header=False)
sampleY.to_csv("./Data/train/random_train_label" + '.csv',
               index=True,
               index_label="sample_id",
               header=["category"])
