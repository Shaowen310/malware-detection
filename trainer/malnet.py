import numpy as np
from keras.models import Model
from keras.layers import *
from keras.engine import Input
from keras import regularizers


def MalNet(maxlen):

    main_input = Input(shape=(maxlen,), dtype='int32', name='main_input')
    emb = Embedding(257, 8, input_length=maxlen, mask_zero=False)(main_input)

    conv1 = Convolution1D(128, 500, strides=500, padding='same')(emb)
    conv2 = Convolution1D(128, 500, strides=500, padding='same', activation='relu')(emb)

    x = multiply([conv1, conv2])
    ## Original Implementation
    x = GlobalMaxPooling1D()(x)
    loss_out = Dense(1, activation='softmax', name='loss_out')(x)

    ## Migrate CNN method here
    # x = Flatten()(x)
    # x = Dropout(0.2)(x)
    # fc = Dense(128,activation='sigmoid', name='fc_1')(x)
    # fc = Dropout(0.2)(fc)
    # loss_out = Dense(1,activation='softmax')(fc)

    ## End of Migration########


    model = Model(input=[main_input], output=[loss_out])

    return model
