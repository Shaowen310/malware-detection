import numpy as np
from keras.models import Model
from keras.layers import *
from keras.engine import Input
from keras import regularizers
# from decov import DeCov

def FullyConnectedNN(maxlen, embed_size):

	layer_size = 64

	main_input = Input(shape=(maxlen,), dtype='int32',  name='main_input')
	emb = Embedding(257, embed_size, input_length=maxlen,  dropout=0.2, embeddings_regularizer=regularizers.l2(1e-4))(main_input)
	x = Flatten()(emb)
	num_layers = 4
	for i in range(num_layers):
	    W_reg = regularizers.l2(1e-4)
	    if i == 0:
	        W_reg = regularizers.l1_l2(1e-4)
	    x = Dense(layer_size, activation='linear', W_regularizer=W_reg)(x) 
	    x = BatchNormalization()(x) 
	    x = ELU()(x)
	if i == num_layers-1:
	    # x = DeCovRegularization(0.1)(x)
	    x = Dropout(0.5)(x)
	loss_out = Dense(1, activation='sigmoid', name='loss_out')(x)
	model = Model(input=[main_input], output=[loss_out])
	

	return model
